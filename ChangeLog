2006-09-01  Jonathan Pryor  <jonpryor@vt.edu>

	* configure.in: Set required Mono version is 1.1.13 (maybe could be 
	  lowered?  No idea); add check for presence of Mono_Posix_ToStat in
	  MonoPosixHelper -- if found, then we should have the new
	  Mono.Unix.Native.NativeConvert.Copy methods, otherwise we need to roll our
	  own equivalents.  This allows portability to "down-level" mono versions.
	* src/Mono.Fuse/create-native-map.exe: Update; this version doesn't skip
	  prototypes for structs within a different assembly, it generates struct
	  declarations for all structs referenced (needed to get struct decls for
	  Stat, Statvfs, etc.)
	* src/Mono.Fuse/Makefile.am: Add --rename-member arguments to
	  create-native-map call so Stat can be used properly.
	* src/Mono.Fuse/Mono.Fuse/FileSystem.cs: Only use NativeConvert.Copy methods
	  if HAVE_MONO_UNIX_NATIVE_COPY_FUNCS is defined, otherwise use the
	  MonoFuseHelper internal methods.
	* src/MonoFuseHelper/Makefile.am: Add mph.c to the build.
	* src/MonoFuseHelper/mph.c: Added; structure copy functions from
	  MonoPosixHelper for copying Stat, Statvfs, & Utimbuf between managed &
	  native code.

2006-09-01  Jonathan Pryor  <jonpryor@vt.edu>

	* README: Add comments about hellofs command-line arguments, capturing trace
	  messages, and FUSE performance timing.
	* example/HelloFS/hellofs.in: Modify setting of LD_LIBRARY_PATH so that it
	  retains the existing $LD_LIBRARY_PATH value.  Remove -odebug parameter.
	  If you want "full" trace output, set MONO_TRACE_LISTENER for the managed
	  trace output, and add -odebug for FUSE trace output, e.g.
	    MONO_TRACE_LISTENER=Console.Out:### ./hellofs -odebug mount-point

2006-08-31  Jonathan Pryor  <jonpryor@vt.edu>

	* src/Mono.Fuse/Makefile.am: Remove dependency on external
	  create-native-map.exe and a public Mono.Unix.Native.MapAttribute (as the
	  latter will no longer be public).  Add `update-map-source' target which
	  uses pkg-config to copy the "reference" MapAttribute.cs & 
	  create-native-map.exe programs from their installed locations.
	* src/Mono.Fuse/create-native-map.exe, src/Mono.Fuse/MapAttribute.cs: Added;
	  cached versions of create-native-map.exe & MapAttribute.cs as provided by
	  pkg-config and the create-native-map.pc file.

2006-08-31  Jonathan Pryor  <jonpryor@vt.edu>

	* configure.in: Remove use of mono-posix-helper.pc, and use glib-2.0
	  instead.
	* src/Mono.Fuse/Mono.Fuse/FileSystem.cs: Change the delegates so that they
	  use only native types, not managed types.  Change all of the _On*
	  methods to do the native->managed conversion for parameters and the return
	  value (depends upon addition of Mono.Unix.Native.NativConvert.Copy()
	  methods to perform structure conversion).  Make OpenedFileInfo.flags
	  internal, so that FileSystem can convert the value when necessary, 
	  as MonoFuseHelper can't do the enum convert.
	* src/MonoFuseHelper/Makefile.am: Remove use of MPH, and add GLIB flags.
	* src/MonoFuseHelper/mfh.c: Remove use of MonoPosixHelper functions (as
	  Mono.Fuse.FileSystem does the type conversions now).  Don't copy-out
	  OpenedFileInfo.flags, as this enum must be converted in managed, and I
	  don't see much point in having another conversion on exit when I can just
	  skip the copy-out (thus preserving the original value).

2006-08-31  Jonathan Pryor  <jonpryor@vt.edu>

	* example/HelloFS/HelloFS.cs: Make creation of data_im_str thread-safe, so
	  that it's only created once and reading threads don't see an intermediate
	  state.

2006-08-28  Jonathan Pryor  <jonpryor@vt.edu>

	* example/HelloFS/HelloFS.cs: Rename the ``data'' file to ``data.im'' (this
	  is a text file with 100MB of data), and replace ``data'' with a file which
	  computes its content at runtime (a time/space tradeoff).  The ``data.im''
	  file isn't available by default; pass --data.im-in-memory to make it
	  available (note that this file will be created in-memory the first time
	  its content is accessed).  Add command-line argument parsing.  Use
	  Trace.WriteLine instead of Console.WriteLine.
	* lib/pkgconfig/mono-fuse.pc.in: Use @libdir@ instead of
	  ${prefix}/@reloc_libdir@.  I'm not sure what @reloc_libdir@ is supposed to
	  be, and it isn't currently expanded anyway.
	* src/Mono.Fuse/Makefile.am: Add the -d:TRACE define.  Add --public-macro
	  and --impl-header to the create-native-map call (create-native-map no
	  longer supports MapHeaderAttribute).
	* src/Mono.Fuse/Mono.Fuse/FileSystem.cs: Remove use of
	  Mono.Unix.Native.MapHeaderAttribute (use create-native-map arguments
	  instead).  Add public argument parsing support (so that HelloFS can have
	  its own command-line args in addition to the FUSE args).  Use Trace
	  instead of Console for trace messages.  Add a `catch(Exception)' handler
	  so we can trace exception messages (helps debugging).

2006-08-25  Jonathan Pryor  <jonpryor@vt.edu>

	* src/MonoFuseHelper/mfh.c: Remove debug printf statements.

2006-08-24  Jonathan Pryor  <jonpryor@vt.edu>

	* Makefile.am: Build the `lib' directory.
	* lib/mono-fuse/Makefile.am: Don't install anything;
	  src/Mono.Fuse/Makefile.am already handles Mono.Fuse.dll installation.

2006-08-24  Jonathan Pryor  <jonpryor@vt.edu>

	* configure.in: Don't forget to generate lib/mono-fuse/Makefile!

2006-08-24  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/Makefile.am: Build the mono-fuse directory as well
	* lib/mono-fuse/Makefile.am: Added; installs Mono.Fuse.dll.

2006-08-24  Jonathan Pryor  <jonpryor@vt.edu>

	* NEWS: Added
	* configure.in: Use AM_PROG_LIBTOOL, not AC_PROG_LIBTOOL, to satisfy
	  autogen.sh's checking.

2006-08-24  Jonathan Pryor  <jonpryor@vt.edu>

	* AUTHORS, COPYING, README: Added (for autoconf)
	* autogen.sh, configure.in, Makefile.am, example/Makefile.am,
	  example/HelloFS/Makefile.am, lib/Makefile.am, lib/pkgconfig/Makefile.am,
	  src/Makefile.am, src/Mono.Fuse/Makefile.am,
	  src/MonoFuseHelper/Makefile.am: Added (auto* build system files).
	* lib/map.c, lib/map.h: Removed (generated by the build; no need to keep
	  these under version control).
	* lib/mfh.c: Renamed to src/MonoFuseHelper/mfh.c
	* lib/mph.c: Removed.  (Functions added to MonoPosixHelper library.)
	* lib/mono-fuse/HelloFS.cs: Renamed to example/HelloFS/HelloFS.cs
	* example/HelloFS/hellofs.in: Added; template for `hellofs' program.
	* lib/mono-fuse/MakeMap.Test.cs, lib/mono-fuse/make-map.cs,
	  lib/mono-fuse/test.c.ref, lib/mono-fuse/test.cs.ref,
	  lib/mono-fuse/test.h.ref, lib/mono-fuse/test.xml.ref: Removed.
	  make-map.exe renamed to create-native-map.exe, moved into
	  mcs svn module under mcs/tools/create-native-map.
	* lib/pkgconfig/mono-fuse.pc.in: Remove Requires line (managed code doesn't
	  depend on glib-2.0 or mono), add Mono.Posix.dll to Libs: line.
	* lib/mono-fuse/FileSystem.cs: renamed to
	  src/Mono.Fuse/Mono.Fuse/FileSystem.cs

2006-08-21  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/map.c, lib/map.h: Flush (current make-map output for Mono.Fuse.dll).
	* lib/mono-fuse/MakeMap.Test.cs: Add additional tests for copying nested
	  structures.
	* lib/mono-fuse/make-map.cs: Add support for copying nested structures.
	* lib/mono-fuse/test.c.ref, lib/mono-fuse/test.h.ref: Flush.

2006-08-21  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/MakeMap.Test.cs: Add enum (to test enum conversion code),
	  class w/o namespace (generated NRE within make-map).
	* lib/mono-fuse/make-map.cs:
	  - s/ExportPrefix/NativeSymbolPrefix/g (current Mono.Posix.dll naming);
	  - check for t.Namespace==null before looking using
	    Configuration.NamespaceRenames (Dictionary`2 doesn't like null keys);
	  - HeaderFileGenerator needs to know about member renames (so it uses the
	    renamed member in conversion code);
	  - Clean up enumeration generation for readablility.
	  - Remove dependency on <mono/posix/limits.h> (include macros within file
	    with a _cnm prefix).
	* lib/mono-fuse/test.c.ref, lib/mono-fuse/test.cs.ref,
	  lib/mono-fuse/test.h.ref, lib/mono-fuse/test.xml.ref: Flush.

2006-08-21  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/make-map.cs: Remove debug statements.

2006-08-21  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/Makefile: Add --library when generating ../map.c, ../map.h.
	* lib/mono-fuse/make-map.cs: Use Mono.Unix.Native.MapAttribute.ExportPrefix
	  to get the namespace of a member, in addition to --rename-namespace.  This
	  is necessary for easier cross-assembly namespace renames -- Mono.Posix.dll
	  uses a Mono_Posix C namespace, but the default algorithm would be a
	  Mono_Unix_Native prefix.  Thus, two choices for correct behavior: use
	  MapAttribute.ExportPrefix within Mono.Posix.dll, allowing all consumers to
	  get the correct prefix By Default (It Just Works), or require that all
	  consumers add --rename-namespace arguments (more clunky, more difficult to
	  diagnose, not as "version proof").

2006-08-20  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/make-map.cs: Add new arguments: --autoconf-member,
	  --exclude-native-symbol, --library, --rename-member, --rename-namespace.
	  These are to remove the necessity of
	  Mono.Unix.Native.MapAttribute.Optional (--autoconf-member) and
	  MapAttribute.ExportPrefix (--rename-namespace), while adding much needed
	  support for the DllImport libraries to generate prototypes for
	  (--library), symbol exclusion (to remove Mono_Posix_Stdlib_snprintf;
	  --exclude-native-symbol), and member renaming (curse you glibc making
	  st_atime a macro! See --rename-member).
	* lib/mono-fuse/Makefile: Use new make-map.exe arguments to test their
	  behavior when building test.c/test.h.
	* lib/mono-fuse/MakeMap.Test.cs: Add types/members to test new make-map.cs
	  arguments.
	* lib/mono-fuse/test.c.ref, lib/mono-fuse/test.h.ref: Flush (new expected

2006-08-20  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/map.c, lib/map.h: Flush.
	* lib/mono-fuse/FileSystem.cs: Use Mono.Unix.Native.MapHeaderAttribute
	  instead of Mono.Unix.Native.HeaderAttribute.

2006-08-17  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/make-map.cs: Add a newline after the implementation macro section.

2006-08-17  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/MakeMap.Test.cs: Use of
	  MapHeaderAttribute.ImplementationMacro and
	  MapHeaderAttribute.ImplementationIncludeFile.
	* lib/mono-fuse/make-map.cs: Add support for
	  MapHeaderAttribute.Implementation* properties within the .c file.
	* lib/mono-fuse/test.c.ref, lib/mono-fuse/test.h.ref: Sync with current
	  make-map.exe output.

2006-08-16  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/map.c, lib.map.h: Flush (new formatting due to make-map changes
	* lib/mono-fuse/MakeMap.Test.cs: Use MapHeaderAttribute; remove
	  [Map("struct qux")] from Qux (can't compile this).
	* lib/mono-fuse/Makefile: Improve dependencies to ensure things are rebuilt
	  when needed; add libtest.so target (to make sure test.c is valid C).
	* lib/mono-fuse/make-map.cs: Add support for Mono.Unix.Native.MapHeaderAttribute;
	  formatting improvements.
	* lib/mono-fuse/test.c.ref, lib/mono-fuse/test.h.ref: Flush.

2006-08-14  Jonathan Pryor  <jonpryor@vt.edu>

	API Cleanup -- return values should only be for reporting errors, not for
	reporting additional information (e.g. read(2) & write(2) overload the return
	value; we don't want to do that, as it's inconsistent).

	* lib/map.h: Sync with mono-fuse/FileSystem.cs
	* lib/mfh.c (mfh_read, mfh_write, mfh_setxattr, mfh_listxattr): Add
	  additional argument to get number bytes read/written from buffer.
	* lib/mono-fuse/FileSystem.cs: Change ReadCb(), WriteCb(),
	  GetExtendedAttributesCb(), ListExtendedAttributesCb() so that return type
	  is Errno (consistency) and an extra `out' parameter is added to hold the
	  number of bytes read/written from the buffer.
	* lib/mono-fuse/HelloFS.cs: Sync with latest API.

2006-08-14  Jonathan Pryor  <jonpryor@vt.edu>

	Re-enable bounds checking in struct/class conversion functions; API cleanup.

	* lib/map.h: Sync with FileSystem.cs
	* lib/mph.c: Add more conversion functions.
	* lib/mfh.c: Fully implement all forwarding functions; remove some warnings;
	  fix segfault in _free_argv().
	* lib/mono-fuse/FileSystem.cs: Use properties, not public fields; add
	  OpenReadOnly, OpenWriteOnly, OpenReadWrite helpers (to remove ugly
	  ((OpenFlags) ((int) fi.Flags & 3)) == OpenFlags.O_RDONLY sillyness).  Stat
	  and Statvfs are `out', not `ref'.  Correct marshaling of byte[]s within
	  delegates, as some are `const' and some aren't (so no need to copy-in or
	  copy-out if not appropriate).  Use mfh_fuse_ prefix instead of mfh_.
	* lib/mono-fuse/HelloFS.cs: Use latest API.

2006-08-09  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/FileSystem.cs:
	  - Remove DestroyCb() delegate, OnDestroy() method.  It's not needed, as
	    FileSystem.Dispose() cleans up opsp, and OnDestroy() was only called
	    from fuse_destroy(), which is also invoked from Dispose().
	  - Add wrappers for all protected virtual methods to act as a "backstop"
	    for exceptions.  We cannot allow exceptions to enter native code from
	    managed code (as this would likely kill the process, with Mono's
	    exception handler "cleaning up" the native callstack, which can't make
	    FUSE happy).  If an exception is emitted, EIO is returned to FUSE.
	    These methods can also be used to remove unnecessary parameters, such as
	    the `WriteCb' `size' parameter (which becomes buf.Length).
	* lib/mono-fuse/HelloFS.cs: Add a `data' file, which contains 96MB of plain
	  text data (useful for timing analysis to see the overhead from
	  various forms of marshaling).  Update to use new OnRead() parameters.

2006-08-08  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/FileSystem.cs: Correct FUSE argument parsing (bad regex used).  
	  GetFuseArgs() needs to prepend the executable name for proper FUSE operation.  
	  We're now able to start an app and pass `-d' to get FUSE debugging messages.

2006-08-08  Jonathan Pryor  <jonpryor@vt.edu>

	Flush.

2006-08-08  Jonathan Pryor  <jonpryor@vt.edu>

	Get things (somewhat) working -- we're now able to read a file contents
	through FUSE, but we're not able to opendir/readdir. :-/

	* lib/Makefile: Add -g, and libMonoFuseHelper.so should link to
	  libMonoPosixHelper.so.
	* lib/map.h: Synchronize with FileSystem.cs
	* lib/mfh.c: Disable some functions so that I don't need to write as many
	  stub functions in lib/mph.c; fix mfh_read, mfh_write (return value
	  nonsense; this needs to be fixed later).
	* lib/mono-fuse/FileSystem.cs: Fix prototypes of ReadCb and WriteCb
	  delegates, as we need [MarshalAs] declarations on the byte[] arrays so
	  that the marshaler knows what to do with them.  Update all byte[] usage
	  within delegates.  Mono doesn't like ``[Out] out string[] paths'' (as used
	  in ReadDirectoryCb()), so replace with `out IntPtr paths' and manually
	  marshal the string[].
	* lib/mono-fuse/Makefile: Use global Mono.Posix.dll file, not local copy;
	* add `hellofs' target to run HelloFS.exe with LD_LIBRARY_PATH set.
	* lib/mono-fuse/HelloFS.cs: Add C.WL helpers (for tracing); fix OnOpen() so
	  that we can read a file (it's O_RDONLY check was wrong); print out parsed
	  command line arguments (showing that FileSystem.Parse() is broken --
	  that's next to fix).
	* lib/mono-fuse/make-map.cs: Don't insert types into `structs' table when a
	  type with [Map] is found, use RecordTypes() instead (so that we record all
	  nested types as well).  Warnings should be prefixed with "warning: ".
	  Don't always generate Namespace_ToType/Namespace_FromType declarations,
	  but only if MapAttribute.NativeType was specified.  Allows for [Map] on
	  structures that need to be exported from an assembly but aren't used
	  within shared methods.
	* lib/mph.c: Let this compile.

2006-08-05  Jonathan Pryor  <jonpryor@vt.edu>

	Include all correct .o files into libMonoFuseHelper.so

	Use correct return types in fuse_* methods.

2006-08-05  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/FileSystem.cs: Remove [Map] from Mono.Fuse.Operations, as it 
	  cannot be assigned to `struct fuse_operations'.  Add necessary DllImport's.
	* lib/mono-fuse/HelloFS.cs: Fix to match new OnReadDirectory() prototype.

2006-08-05  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mfh.c: Add implementation of mfh_readdir().

2006-08-05  Jonathan Pryor  <jonpryor@vt.edu>

	* lib/mono-fuse/FileSystem.cs: Add necessary Header attribute so that map.c/map.h are
	  generated sanely.

2006-08-05  Jonathan Pryor  <jonpryor@vt.edu>

	Add unit test for make-map.exe, check & check-update targets to Makefile, and
	expected output for unit tests.

2006-08-02  Jonathan Pryor  <jonpryor@vt.edu>

	Provide implementations for most of the mfh_* functions.
	Remove backup files.

2006-08-02  Jonathan Pryor  <jonpryor@vt.edu>

	Build libMonoFuseHelper.so.

2006-08-01  Jonathan Pryor  <jonpryor@vt.edu>

	Add files for libMonoFuseHelper.so and Makefile to build libMonoFuseHelper.so.

2006-08-01  Jonathan Pryor  <jonpryor@vt.edu>

	Current Mono.Fuse managed code implementation.

2006-07-22  Jonathan Pryor  <jonpryor@vt.edu>

	Initial Import.

