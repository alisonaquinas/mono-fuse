/*
 * This file was automatically generated by make-map from MakeMap.Test.dll.
 *
 * DO NOT MODIFY.
 */

using System;
using System.Runtime.InteropServices;
using Mono.Unix.Native;

namespace Mono.Unix.Native {

	[CLSCompliant (false)]
	public sealed /* static */ partial class NativeConvert
	{
		private NativeConvert () {}

		private const string LIB = "MonoPosixHelper";

		private static void ThrowArgumentException (object value)
		{
			throw new ArgumentOutOfRangeException ("value", value,
				Locale.GetText ("Current platform doesn't support this value."));
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_FromTestEnum")]
		private static extern int FromTestEnum (TestEnum value, out Int32 rval);

		public static bool TryFromTestEnum (TestEnum value, out Int32 rval)
		{
			return FromTestEnum (value, out rval) == 0;
		}

		public static Int32 FromTestEnum (TestEnum value)
		{
			Int32 rval;
			if (FromTestEnum (value, out rval) == -1)
				ThrowArgumentException (value);
			return rval;
		}

		[DllImport (LIB, EntryPoint="MakeMap_Test_ToTestEnum")]
		private static extern int ToTestEnum (Int32 value, out TestEnum rval);

		public static bool TryToTestEnum (Int32 value, out TestEnum rval)
		{
			return ToTestEnum (value, out rval) == 0;
		}

		public static TestEnum ToTestEnum (Int32 value)
		{
			TestEnum rval;
			if (ToTestEnum (value, out rval) == -1)
				ThrowArgumentException (value);
			return rval;
		}

	}
}

