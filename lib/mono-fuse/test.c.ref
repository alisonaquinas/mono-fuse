/*
 * This file was automatically generated by make-map from MakeMap.Test.dll.
 *
 * DO NOT MODIFY.
 */
#include <config.h>

#include <stdlib.h>
#include <string.h>
#include <mono/posix/limits.h>

/*
 * Implementation Macros
 */
#ifndef FOO
#define FOO "foo"
#endif /* ndef FOO */

/*
 * Implementation Headers
 */
#include <stdio.h>


#include "test.h"

int
MakeMap_Test_FromFoo (struct MakeMap_Test_Foo *from, struct foo *to)
{
	mph_return_val_if_overflow (int, from->foo, -1);
#ifdef HAVE_STRUCT_FOO_AUTOCONF_ME
	mph_return_val_if_overflow (gint64, from->autoconf_me, -1);
#endif /* ndef HAVE_STRUCT_FOO_AUTOCONF_ME */

	memset (to, 0, sizeof(*to));

	to->foo         = from->foo;
#ifdef HAVE_STRUCT_FOO_AUTOCONF_ME
	to->autoconf_me = from->autoconf_me;
#endif /* ndef HAVE_STRUCT_FOO_AUTOCONF_ME */

	return 0;
}


int
MakeMap_Test_ToFoo (struct foo *from, struct MakeMap_Test_Foo *to)
{
	mph_return_val_if_overflow (int, from->foo, -1);
#ifdef HAVE_STRUCT_FOO_AUTOCONF_ME
	mph_return_val_if_overflow (gint64, from->autoconf_me, -1);
#endif /* ndef HAVE_STRUCT_FOO_AUTOCONF_ME */

	memset (to, 0, sizeof(*to));

	to->foo         = from->foo;
#ifdef HAVE_STRUCT_FOO_AUTOCONF_ME
	to->autoconf_me = from->autoconf_me;
#endif /* ndef HAVE_STRUCT_FOO_AUTOCONF_ME */

	return 0;
}


